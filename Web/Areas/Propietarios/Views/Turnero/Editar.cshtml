@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Web.Areas.Propietarios.Models
@using Aplicacion.UseCases.Propietario
@model EditarTurneroVM
@{ 
    ViewData["Area"] = "Propietarios";
}
<h1>Editar Turnero</h1>

<form asp-action="Editar" method="post" name="editarTurneroForm" enctype="multipart/form-data">
    <div class="form-group">
        <label for="conceptoInput">Descripción</label>
        <input type="text"
               class="form-control"
               id="conceptoInput"
               aria-describedby="concepto"
               placeholder="Descripción del servicio"
               name="concepto"
               asp-for="Concepto">
    </div>
    <h4> Dirección </h4>
    <hr />
    <div class="form-row">
        <div class="form-group col-md-6">
            <label for="inputCiudad">Ciudad</label>
            <input type="text"
                   class="form-control"
                   id="inputCiudad"
                   name="ciudad"
                   asp-for="Ciudad" />
        </div>
        <div class="form-group col-md-4">
            <label for="inputCalle">Calle</label>
            <input type="text"
                   id="inputCalle"
                   class="form-control"
                   name="calle"
                   asp-for="Calle" />
        </div>
        <div class="form-group col-md-2">
            <label for="inputNumero">Altura</label>
            <input type="number"
                   class="form-control"
                   id="inputNumero"
                   min="1"
                   name="numero"
                   asp-for="Numero">
        </div>
    </div>
    <div id="buscarTurneroMap" style="height:50vh"></div>
    <div class="form-row">
        <div class="form-group col-md-4">
            <input type="text"
                   readonly
                   placeholder="Latitud"
                   class="form-control"
                   id="inputLatitud"
                   name="latitud"
                   asp-for="Latitud"
                   required>
        </div>
        <div class="form-group col-md-4">
            <input type="text"
                   readonly
                   placeholder="Longitud"
                   class="form-control"
                   id="inputLongitud"
                   name="longitud"
                   asp-for="Longitud"
                   required>
        </div>
    </div>
    <div class="form-group">
        <label for="inputCapacidad"> Capacidad máxima </label>
        <input type="number"
               class="form-control"
               id="inputCapacidad"
               min="1"
               placeholder="Tamaño de la cola"
               name="CantidadMaxima"
               asp-for="CantidadMaxima" />
    </div>
@* pendiente de ampliar el soporte a fotos
    <div class="form-group">
        <input type="file" asp-for="files" multiple="multiple" />
    </div>
*@
    <div class="form-group">
        <label for="inputIdTurnero"></label>
        <input type="hidden"
               class="form-control"
               id="inputIdTurnero"
               min="0"
               name="IdTurnero"
               asp-for="IdTurnero" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>


    <script src="https://openlayers.org/api/OpenLayers.js"></script>
    <script>
        var zoom = 12;
        var latIni = -34.6302673;
        var lonIni = -58.4356537;
        var fromProjection = new OpenLayers.Projection("EPSG:4326");   // Transform from WGS 1984
        var toProjection = new OpenLayers.Projection("EPSG:900913"); // to Spherical Mercator Projection
        var positionIni = new OpenLayers.LonLat(lonIni, latIni).transform(fromProjection, toProjection);


        map = new OpenLayers.Map({
            div: "buscarTurneroMap",
            theme: null,
            projection: new OpenLayers.Projection("EPSG:900913"),
            numZoomLevels: 18,
            controls: [
                new OpenLayers.Control.TouchNavigation({
                    dragPanOptions: {
                        enableKinetic: true
                    }
                }),
                new OpenLayers.Control.Zoom()
            ],
            layers: [
                new OpenLayers.Layer.OSM("OpenStreetMap", null, {
                    transitionEffect: 'resize'
                }),
                new OpenLayers.Layer.Markers("Markers")
            ]
        });
        map.setCenter(positionIni, zoom);

        cargar(parseFloat('@(@Model.Latitud)'.replace(',', '.')), parseFloat('@(@Model.Longitud)'.replace(',', '.')));

        map.events.register('click', map, handleClick);
        map.events.register('touchstart', map, handleClick);

        function handleClick(e) {
            var lonlat = map.getLonLatFromViewPortPx(e.xy);
            lonlat = new OpenLayers.LonLat(lonlat.lon, lonlat.lat).transform(toProjection, fromProjection);
            $("#inputLatitud").val(lonlat.lat);
            $("#inputLongitud").val(lonlat.lon);
        }

        var size = new OpenLayers.Size(21, 25);
        var offset = new OpenLayers.Pixel(-(size.w / 2), -size.h);
        var icon = new OpenLayers.Icon('https://www.flaticon.com/premium-icon/icons/svg/2776/2776000.svg', size, offset);


        function cargar(lat, lon) {
            var markers = new OpenLayers.Layer.Markers("Markers");

            var position = new OpenLayers.LonLat(lon, lat).transform(fromProjection, toProjection);

            var marker = new OpenLayers.Marker(position);
            markers.addMarker(marker);
            map.addLayer(markers);

        }
    </script>
</form>