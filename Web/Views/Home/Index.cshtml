@{
    ViewData["Title"] = "Home Page";
}



<div class="jumbotron">
    <h1 class="display-4">Hola!</h1>

    <a asp-area="Clientes" asp-controller="Turnos" asp-action="Nuevo" class="btn btn-primary">Solicitar turno</a>

    <img src="@ViewBag.QR" alt="Alternate Text" style="width:200px;" />

    <p>Si sos el encargado de un turnero, ingresa <a asp-area="Propietarios" asp-controller="Cuenta" asp-action="Ingresar">aca</a></p>.
</div>


<div class="">

    <form id="qr_form" asp-action="ReadQR" method="post">
        <div class="row">
            <div id="reader"></div>
        </div>
        <div class="row justify-content-center">
            <input type="text" id="qrdata" name="qrdata" hidden/>
        </div>
    </form>
</div>

<script>

    // This method will trigger user permissions
    Html5Qrcode.getCameras().then(devices => {
        /**
         * devices would be an array of objects of type:
         * { id: "id", label: "label" }
         */
        if (devices && devices.length) {
            var cameraId = devices[0].id;
            // Create instance of the object. The only argument is the "id" of HTML element created above.
            const html5QrCode = new Html5Qrcode("reader");

            html5QrCode.start(
                cameraId,     // retreived in the previous step.
                {
                    fps: 2,    // sets the framerate to 10 frame per second
                    //qrbox: 250  // sets only 250 X 250 region of viewfinder to
                    // scannable, rest shaded.
                },
                qrCodeMessage => {
                    html5QrCode.stop().then(ignore => {
                        // QR Code scanning is stopped.
                        console.log("QR Code scanning stopped.");
                    }).catch(err => {
                        // Stop failed, handle it.
                        console.log("Unable to stop scanning.");
                    });
                    // do something when code is read. For example:
                    console.log(`QR Code detected: ${qrCodeMessage}`);
                    document.getElementById("qrdata").value = qrCodeMessage;
                    document.getElementById("qr_form").submit();

                },
                errorMessage => {
                    // parse error, ideally ignore it. For example:
                    console.log(`QR Code no longer in front of camera.`);
                })
                .catch(err => {
                    // Start failed, handle it. For example,
                    console.log(`Unable to start scanning, error: ${err}`);
                });
        }
    }).catch(err => {
        console.log(err);
    });
</script>
